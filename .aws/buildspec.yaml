version: 0.2

phases:
  install:
    runtime-versions:
      python: 3.11
    #commands:

  pre_build:
    commands:
      - set -euo pipefail
      # Set build variables and fetch secrets
      - |
        export GIT_SHA=$(echo $CODEBUILD_RESOLVED_SOURCE_VERSION | cut -c1-7)
        export IMAGE_TAG=$GIT_SHA-$CODEBUILD_BUILD_NUMBER
        export AWS_ACCOUNT_ID=$(aws sts get-caller-identity --query Account --output text)
        export AWS_REGION=${AWS_REGION:-us-east-1}
      # ECR login
      - aws ecr get-login-password --region $AWS_REGION | docker login --username AWS --password-stdin $AWS_ACCOUNT_ID.dkr.ecr.$AWS_REGION.amazonaws.com

  build:
    commands:
      # Build Docker images for Springboot API and Quiz Generator
      - |
        docker build \
          --platform=linux/amd64 \
          -t $ECR_SB_REPO_NAME:$IMAGE_TAG \
          -t $ECR_SB_REPO_NAME:latest \
          -f ./springboot_api/Dockerfile.prod \
          ./springboot_api
      - |
        docker build \
          --platform=linux/amd64 \
          -t $ECR_QG_REPO_NAME:$IMAGE_TAG \
          -t $ECR_QG_REPO_NAME:latest \
          -f ./quiz_generator/Dockerfile.prod \
          ./quiz_generator

  post_build:
    commands:
      # Push Springboot API image
      - docker push $ECR_SB_REPO_NAME:$IMAGE_TAG
      - docker push $ECR_SB_REPO_NAME:latest
      # Push Quiz Generator image
      - docker push $ECR_QG_REPO_NAME:$IMAGE_TAG
      - docker push $ECR_QG_REPO_NAME:latest
      # Create imagedefinitions.json for ECS Standard Deployment
      - echo "[{\"name\":\"springboot-api-task\",\"imageUri\":\"$ECR_SB_REPO_NAME:$IMAGE_TAG\"},{\"name\":\"quiz-generator-task\",\"imageUri\":\"$ECR_QG_REPO_NAME:$IMAGE_TAG\"}]" > imagedefinitions.json
      # Place appspec.yaml in the root directory
      #- cp .aws/appspec.yaml ./appspec.yaml
      #- cp .aws/taskdef.json ./taskdef.json

artifacts:
  files:
    - imagedefinitions.json
    #- appspec.yaml
    #- taskdef.json
  base-directory: "."
